[{"title":"About","type":0,"sectionRef":"#","url":"/AnimaLib/docs/intro","content":"","keywords":""},{"title":"Why AnimaLib?​","type":1,"pageTitle":"About","url":"/AnimaLib/docs/intro#why-animalib","content":"Simple: AnimaLib is built with simplicity in mind. It provides an intuitive API that makes creating and managing animations in your Roblox games a straightforward process.Versatile: AnimaLib allows you the freedom to integrate it seamlessly into your game or utilise it as a foundation for crafting your personalised animation module.Scalable: Whether you're creating a small indie game or a large-scale multiplayer experience, AnimaLib scales effortlessly to meet your project's demands. "},{"title":"Getting Started​","type":1,"pageTitle":"About","url":"/AnimaLib/docs/intro#getting-started","content":""},{"title":"Installation​","type":1,"pageTitle":"About","url":"/AnimaLib/docs/intro#installation","content":"Installing AnimaLib is as simple as dropping the module into your game. You can also be used with a Rojo workflow. Roblox Studio​ Download the latest release of AnimaLib from Roblox.Insert AnimaLib into ReplicatedStorage. Rojo/Wally​ Add AnimaLib to your wally.toml dependencies: AnimaLib = &quot;Animalib = &quot;thebetterdark/animalib@^0.2&quot;Run wally update to install the new dependency.Require AnimaLib like any other module from Wally. "},{"title":"Basic Usage​","type":1,"pageTitle":"About","url":"/AnimaLib/docs/intro#basic-usage","content":"The following example demonstrates how to create an animation and play it on a Humanoid. local AnimaLib = require(game:GetService(&quot;ReplicatedStorage&quot;).Packages.AnimaLib) local humanoid = game:GetService(&quot;Players&quot;).LocalPlayer.Character.Humanoid local animator = AnimaLib.new(humanoid.Animator) animator:LoadAnimation(&quot;TestAnimation&quot;, &quot;rbxassetid://123456789&quot;) animator:PlayAnimation(&quot;TestAnimation&quot;)  You are also able to use AnimaLib with a AnimationController by passing the controller as the first argument to AnimaLib.new(). local AnimaLib = require(game:GetService(&quot;ReplicatedStorage&quot;).Packages.AnimaLib) local animationController = somePath.AnimationController local animator = AnimaLib.new(animationController.Animator) animator:LoadAnimation(&quot;TestAnimation&quot;, &quot;rbxassetid://123456789&quot;) animator:PlayAnimation(&quot;TestAnimation&quot;)  "},{"title":"Contributing​","type":1,"pageTitle":"About","url":"/AnimaLib/docs/intro#contributing","content":"Contributions to Animalib are welcome! To contribute, please fork the repository and submit a pull request with your changes. Before submitting a pull request, please ensure that your code is following Roblox Lua Style Guide. "},{"title":"AnimaLib","type":0,"sectionRef":"#","url":"/AnimaLib/api/AnimaLib","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"AnimaLib","url":"/AnimaLib/api/AnimaLib#types","content":" "},{"title":"AnimatorClass​","type":1,"pageTitle":"AnimaLib","url":"/AnimaLib/api/AnimaLib#AnimatorClass","content":"&lt;/&gt; interface AnimatorClass { Animator: Animator LoadedAnimations: {string: AnimationTrack } PlayingAnimations: {string: PlayingAnimation} LoadAnimation(string,: number) → AnimationTrack GetAnimationTrack(string): → AnimationTrack PlayAnimation(string,: AnimationProperties,boolean?) → AnimationTrack StopAnimation(string,: number?) → nil StopAllAnimations(): → nil Destroy(): → nil } AnimatorClass is a table that contains the Animator, LoadedAnimations, and PlayingAnimations tables. It also contains functions that you can use to interact with the Animator &amp; AnimationTracks. This is returned when you create a new AnimaLib instance.  "},{"title":"AnimationProperties​","type":1,"pageTitle":"AnimaLib","url":"/AnimaLib/api/AnimaLib#AnimationProperties","content":"&lt;/&gt; interface AnimationProperties { Speed: number? Weight: number? FadeIn: number? FadeOut: number? Looped: boolean? Priority: Enum.AnimationPriority? } AnimationProperties is a table that contains properties that you can used to influence how an animation is played.  "},{"title":"PlayingAnimation​","type":1,"pageTitle":"AnimaLib","url":"/AnimaLib/api/AnimaLib#PlayingAnimation","content":"&lt;/&gt; interface PlayingAnimation { AnimationTrack: AnimationTrack Properties: AnimationProperties } PlayingAnimation is a table that contains an AnimationTrack and AnimationProperties. This is returned when you play an animation. "},{"title":"Functions​","type":1,"pageTitle":"AnimaLib","url":"/AnimaLib/api/AnimaLib#functions","content":" "},{"title":"new​","type":1,"pageTitle":"AnimaLib","url":"/AnimaLib/api/AnimaLib#new","content":"&lt;/&gt; AnimaLib.new( animator: Animator , preferLodEnabled: boolean? ) → AnimatorClass This creates a new AnimaLib instance. local AnimaLib = AnimaLib.new(Animator) tip You can set preferLodEnabled to false if you want to disable the animator's PreferLodEnabled property. To find out more about PreferLodEnabled, check out the roblox api reference.  "},{"title":"LoadAnimation​","type":1,"pageTitle":"AnimaLib","url":"/AnimaLib/api/AnimaLib#LoadAnimation","content":"&lt;/&gt; AnimaLib:LoadAnimation( animationName: string, animationId: number ) → AnimationTrack  This function will load an animation and return an AnimationTrack. local AnimaLib = AnimaLib.new(Animator) local AnimationTrack = AnimaLib:LoadAnimation(&quot;AnimationName&quot;, &quot;rbxassetid://123456789&quot;) warning You can't load animations with the same name more than once. If you try to load an animation with the same name more than once, it will throw an error.  "},{"title":"GetAnimationTrack​","type":1,"pageTitle":"AnimaLib","url":"/AnimaLib/api/AnimaLib#GetAnimationTrack","content":"&lt;/&gt; AnimaLib:GetAnimationTrack(animationName: string) → AnimationTrack  This function will return an AnimationTrack. tip You can use this to connect to events on the AnimationTrack. local AnimaLib = AnimaLib.new(Animator) local AnimationTrack = AnimaLib:GetAnimationTrack(&quot;AnimationName&quot;) AnimationTrack.Stopped:Connect(function() print(&quot;Animation stopped!&quot;) end)   "},{"title":"PlayAnimation​","type":1,"pageTitle":"AnimaLib","url":"/AnimaLib/api/AnimaLib#PlayAnimation","content":"&lt;/&gt; AnimaLib:PlayAnimation( animationName: string, properties: AnimationProperties?, ignorePlaying: boolean? ) → AnimationTrack  This function will play an animation. local AnimaLib = AnimaLib.new(Animator) local AnimationTrack = AnimaLib:PlayAnimation(&quot;AnimationName&quot;, { Speed = 1, Weight = 1, FadeIn = 0, FadeOut = 0, Looped = false, Priority = Enum.AnimationPriority.Action, }) caution You can only play animations that have been loaded using AnimaLib:LoadAnimation. warning Roblox enforces a limit on how many tracks can be playing at once. This limit is 256. If you try to play more than 256 animations at once, it will not play. See this devforum post for more information.  "},{"title":"StopAnimation​","type":1,"pageTitle":"AnimaLib","url":"/AnimaLib/api/AnimaLib#StopAnimation","content":"&lt;/&gt; AnimaLib:StopAnimation( animationName: string, overrideFadeOut: number? ) → nil This function will stop an animation.  "},{"title":"StopAllAnimations​","type":1,"pageTitle":"AnimaLib","url":"/AnimaLib/api/AnimaLib#StopAllAnimations","content":"&lt;/&gt; AnimaLib:StopAllAnimations() → nil This function will stop all animations. caution This will only stop animations in the scope of the AnimaLib instance. If you have multiple AnimaLib instances, you will need to call this function on each instance.  "},{"title":"Destroy​","type":1,"pageTitle":"AnimaLib","url":"/AnimaLib/api/AnimaLib#Destroy","content":"&lt;/&gt; AnimaLib:Destroy() → nil This function will destroy the AnimaLib instance. caution This will only destroy the AnimaLib instance. If you have multiple AnimaLib instances, you will need to call this function on each instance. "}]